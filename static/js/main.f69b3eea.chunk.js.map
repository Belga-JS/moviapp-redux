{"version":3,"sources":["Card.js","App.js","serviceWorker.js","reducers/ListMoviesReducers.js","reducers/DisplayReducers.js","reducers/nameReducers.js","reducers/imgReducers.js","reducers/ratingReducers.js","reducers/FilternameReducers.js","reducers/FilterstarReducers.js","store.js","index.js"],"names":["Card","className","this","props","movies","filter","el","name","toLowerCase","includes","input","trim","rating","filternameReducers","map","padEnd","src","img","onClick","edit","id","more","Component","App","add","nameReducers","imgReducers","ratingReducers","search","SearchReducers","ADD_MOVIE","star","e","CHANGE_FILTERSTAR","console","log","DisplayReducers","type","placeholder","onChange","CHANGE_FILTERNAME","display","CHANGE_NAME","CHANGE_IMG","CHANGE_Rating","ListMoviesReducers","FilternameReducers","FilterstarReducers","connect","dispatch","ratingAdd","nameAdd","value","target","Boolean","window","location","hostname","match","movielist","listMoviesReducers","state","action","displayReducers","store","createStore","combineReducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f69b3eea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Card extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n               \r\n\r\n                {this.props.movies && this.props.movies.filter(el => el.name.toLowerCase().includes(this.props.input.toLowerCase().trim()) && el.rating <= this.props.filternameReducers).map(el => {\r\n                    return (\r\n                        <div className=\"movie-card\">\r\n                            <p className=\"movie-name\">{el.name}</p>\r\n                            <p className=\"movie-rating\">{\"\".padEnd(el.rating, \"⭐\")}</p>\r\n                            <img className=\"movie-img\" src={el.img} />\r\n                            <button onClick={() => { this.props.edit(el.id, this.props.movies) }}>Edit</button>\r\n                            <span onClick={() => { this.props.more(el.id, this.props) }}>More</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Card;\r\n\r\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Card from './Card'\n\nclass App extends Component {\n\n  add = () => {\n\n    let name = this.props.nameReducers;\n    let img = this.props.imgReducers;\n    let rating = this.props.ratingReducers;\n    let search = this.props.SearchReducers;\n\n\n    this.props.ADD_MOVIE(rating, name, img, search)\n  }\n\n  star = (e) => {\n    this.props.CHANGE_FILTERSTAR(e)\n  }\n\n  render() {\n    console.log(this.props.DisplayReducers)\n    return (\n      <div className=\"movie-app\">\n        <header className=\"header\">\n          <input type='text' placeholder=\"Search\" onChange={(e) => this.props.CHANGE_FILTERNAME(e)} />\n          <span onClick={() => this.star(1)}>⭐</span>\n          <span onClick={() => this.star(2)}>⭐</span>\n          <span onClick={() => this.star(3)}>⭐</span>\n          <span onClick={() => this.star(4)}>⭐</span>\n          <span onClick={() => this.star(5)}>⭐</span>\n        </header>\n        {/*<Card input={this.state.search} star={this.state.star} movies={this.state.movielist} />*/}\n\n\n        {/*  <p className=\"plus\" onClick={() => this.setState({ display: !this.state.display })}>+</p>*/}\n\n        <p className=\"plus\" onClick={() => this.props({ display: !this.props.display })}>+</p>\n        \n      { /* </div> * <div className={this.props.DisplayReducers}>*/}\n\n\n        <div className={this.props.DisplayReducers}>\n\n          <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={(e) => this.props.CHANGE_NAME(e)} />\n          <input type=\"text\" placeholder=\"Img\" name=\"img\" onChange={(e) => this.props.CHANGE_IMG(e)} />\n          <input type=\"text\" placeholder=\"rating\" name=\"rating\" onChange={(e) => this.props.CHANGE_Rating(e)} />\n          <button onClick={this.add}>Add</button>\n        </div>\n\n\n\n        <Card movies={this.props.ListMoviesReducers} FilternameReducers={this.props.FilternameReducers} FilterstarReducers={this.props.FilterstarReducers} />\n\n      </div>);\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ADD_MOVIE: (ratingAdd, nameAdd, img, ) => {\n      dispatch({ type: 'add-Movie', ratingAdd: ratingAdd, nameAdd: nameAdd, img: img })\n    },\n    CHANGE_NAME: (e) => {\n      dispatch({ type: 'CHANGE_NAME', value: e.target.value })\n    },\n    CHANGE_IMG: (e) => {\n      dispatch({ type: 'CHANGE_IMG', value: e.target.value })\n    },\n    CHANGE_Rating: (e) => {\n      dispatch({ type: 'CHANGE_Rating', value: e.target.value })\n    },\n    CHANGE_FILTERNAME: (e) => {\n      dispatch({ type: 'CHANGE_FILTERNAME', value: e.target.value })\n    },\n    CHANGE_FILTERSTAR: (e) => {\n      dispatch({ type: 'CHANGE_FILTERNAME', value: (e) })\n    }\n\n  }\n}\n\nconst mapStateToProps = ({ ListMoviesReducers, DisplayReducers, nameReducers, imgReducers, ratingReducers, SearchReducers, FilternameReducers, FilterstarReducers }) => {\n  return {\n    ListMoviesReducers: ListMoviesReducers,\n    DisplayReducers: DisplayReducers,\n    nameReducers: nameReducers,\n    imgReducers: imgReducers,\n    ratingReducers: ratingReducers,\n    SearchReducers: SearchReducers,\n    FilternameReducers: FilternameReducers,\n    FilterstarReducers: FilterstarReducers\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\nconst movielist= [\r\n  \r\n  \r\n  {rating:2,name:\"Abc\",img:\"https://maghreb.space/P622948/8f5a07bebb4d94ba59bceaf7f0690c46/___www_maghrebspace_net__12082014173148_262Afifa%20iskandar.jpg\"},\r\n  {rating:2,name:\"Abc\",img:\"https://maghreb.space/P622948/8f5a07bebb4d94ba59bceaf7f0690c46/___www_maghrebspace_net__12082014173148_262Afifa%20iskandar.jpg\"},\r\n\r\n\r\n\r\n\r\n]\r\n\r\n\r\nconst listMoviesReducers=(state=movielist,action)=>{\r\n  if (action.type===\"add-Movie\")\r\n\r\n  //[...list,newItm]\r\n\r\n\r\n\r\n\r\n{    \r\n  return [...state,{rating:action.ratingAdd,name:action.nameAdd,img:action.img}]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn state\r\n}\r\n\r\n\r\nexport default listMoviesReducers","\r\n\r\nconst displayReducers=(state=\"display\",action)=>{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn state\r\n}\r\n\r\n\r\nexport default displayReducers","const nameReducers=(state='',action)=>{\n\n    if(action.type==='CHANGE_NAME')\n    {return state=action.value}\n    \n    return state\n    \n    \n    }\n    export default nameReducers","const imgReducers=(state='',action)=>{\n\n    if(action.type==='CHANGE_IMG')\n    {return state=action.value}\n    \n    return state\n    \n    \n    }\n    export default imgReducers","const ratingReducers=(state='',action)=>{\n\n    if(action.type==='CHANGE_Rating')\n    {return state=action.value}\n    \n    return state\n    \n    \n    }\n    export default ratingReducers","const FilternameReducers= (state = '', action) => {\r\n\r\n    if (action.type === 'CHANGE_FILTERNAME')\r\n{\r\n    return state=action.value\r\n}\r\n\r\n    return state\r\n}\r\nexport default FilternameReducers","const FilterstarReducers = (state = '0', action) => {\r\n\r\n    if (action.type === 'CHANGE_FILTERSTAR') {\r\n        return state = action.value\r\n    }\r\n\r\n    return state\r\n}\r\nexport default FilterstarReducers","import {createStore,combineReducers} from \"redux\";\r\nimport ListMoviesReducers  from './reducers/ListMoviesReducers';\r\nimport DisplayReducers  from './reducers/DisplayReducers';\r\n\r\nimport nameReducers  from './reducers/nameReducers';\r\nimport imgReducers  from './reducers/imgReducers';\r\nimport ratingReducers  from './reducers/ratingReducers';\r\nimport  FilternameReducers from './reducers/FilternameReducers';\r\nimport FilterstarReducers from './reducers/FilterstarReducers';\r\n\r\n\r\n\r\n\r\nconst store=createStore(combineReducers({\r\nListMoviesReducers:ListMoviesReducers,\r\nDisplayReducers:DisplayReducers,\r\nnameReducers:nameReducers,\r\nimgReducers:imgReducers,\r\nratingReducers:ratingReducers,\r\nFilternameReducers:FilternameReducers,\r\nFilterstarReducers:FilterstarReducers\r\n\r\n})\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport{Provider} from 'react-redux';\nimport store from \"./store\";\nReactDOM.render(<Provider store ={store}> <App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}